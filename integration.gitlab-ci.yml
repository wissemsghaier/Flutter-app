stages:
  - checkout
  - fetch_Packages
  - test
  - build
  - package
  - upload
  - distribute

variables:
  NEXUS_CREDENTIALS_ID: 'nexus-jenkins'
  NEXUS_URL: 'https://nexus.u-cloudsolutions.xyz'
  NEXUS_REPOSITORY: 'student-repository'
  GROUP_ID: 'com.artificial.Flutter'
  ARTIFACT_ID: 'project-flutter'
  ZIP_FILE_NAME: '${ARTIFACT_ID}-${COMMIT_ID}.zip'
  COMMIT_ID: $(git rev-parse --short HEAD)

  BRANCH_NAME: "${CI_COMMIT_REF_NAME}"
  BUILD_NUMBER: "${CI_PIPELINE_ID}"

  TARGET_BRANCH: "${TARGET_BRANCH}"

checkout:
  stage: checkout
  tags:
    - flutter
  script:
    - echo "Checking out the repository"
    - git rev-parse --short HEAD > commit_hash.txt
    - export COMMIT_ID=$(cat commit_hash.txt)
    - export ZIP_FILE_NAME="${ARTIFACT_ID}-${COMMIT_ID}.zip"
  rules:
    - if: '$CI_COMMIT_REF_NAME == $TARGET_BRANCH'
      when: always

fetch_Packages:
  stage: fetch_Packages
  tags:
    - docker-flutter
  script:
    - flutter pub get
  rules:
    - if: '$CI_COMMIT_REF_NAME == $TARGET_BRANCH'
      when: always

test:
  stage: test
  tags:
    - docker-flutter
  script:
    - flutter test
  rules:
    - if: '$CI_COMMIT_REF_NAME == $TARGET_BRANCH'
      when: always

build:
  stage: build
  tags:
    - docker-flutter
  script:
    - flutter build apk --release --build-name="${BRANCH_NAME}" --build-number="${BUILD_NUMBER}"
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-release.apk
  rules:
    - if: '$CI_COMMIT_REF_NAME == $TARGET_BRANCH'
      when: always

package:
  stage: package
  tags:
    - flutter
  script:
    - echo "Cleaning up old ZIP files..."
    - rm -f artifact-*.zip
    - echo "Packaging project..."
    - COMMIT_ID=$(git rev-parse --short HEAD)
    - ZIP_FILE_NAME="artifact-${COMMIT_ID}.zip"
    - echo "Packaging project as ${ZIP_FILE_NAME}..."
    - zip -r ${ZIP_FILE_NAME} .
    - ls -l ${ZIP_FILE_NAME}

  artifacts:
    paths:
      - artifact-*.zip
  rules:
    - if: '$CI_COMMIT_REF_NAME == $TARGET_BRANCH'
      when: always

upload:
  stage: upload
  tags:
    - flutter
  script:
    - echo "Determining commit ID..."
    - COMMIT_ID=$(git rev-parse --short HEAD)
    - ZIP_FILE_NAME="project-flutter-${COMMIT_ID}.zip"
    - echo "Uploading ${ZIP_FILE_NAME} to Nexus..."
    - UPLOAD_URL="${NEXUS_URL}/repository/${NEXUS_REPOSITORY}/${GROUP_ID//./\/}/${ARTIFACT_ID}/${COMMIT_ID}/${ZIP_FILE_NAME}"
    - pwd  # Print working directory
    - find . -name "*.zip"  # Find ZIP files
    - ls -l ${ZIP_FILE_NAME}  # Verify file existence
    - curl -u ${NEXUS_CREDENTIALS_ID} --upload-file "${ZIP_FILE_NAME}" "${UPLOAD_URL}"
  rules:
    - if: '$CI_COMMIT_REF_NAME == $TARGET_BRANCH'
      when: always

distribute:
  stage: distribute
  tags:
    - docker-flutter
  dependencies:
    - build
  script:
    - apkPath="build/app/outputs/flutter-apk/app-release.apk"
    - tagName="v${CI_PIPELINE_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    - echo "Checking for APK file at $apkPath"
    - ls -l build/app/outputs/flutter-apk/ || true
    - |
      if [ -f "$apkPath" ]; then
        echo "APK file exists. Proceeding with distribution."
        
        # Cr√©e une session d'upload sur App Center
        UPLOAD_ID=$(curl -X POST \
          -H "X-API-Token: 79aabd068b99a4b35b3688e39b1a69ff6eec38e6" \
          https://api.appcenter.ms/v0.1/apps/sghaier-fss.u-sfax.tn/flutter-app/release_uploads \
          | jq -r '.upload_id')

        UPLOAD_URL=$(curl -X POST \
          -H "X-API-Token: 79aabd068b99a4b35b3688e39b1a69ff6eec38e6" \
          https://api.appcenter.ms/v0.1/apps/sghaier-fss.u-sfax.tn/flutter-app/release_uploads \
          | jq -r '.upload_url')

        if [ -n "$UPLOAD_URL" ]; then
          echo "Starting multipart upload..."
          curl -X PUT "$UPLOAD_URL" \
            -F "ipa=@${apkPath}" || \
          (echo "Failed to upload APK file. Distribution aborted." && exit 1)

          # Finaliser l'upload sur App Center
          curl -X PATCH \
            -H "X-API-Token: 79aabd068b99a4b35b3688e39b1a69ff6eec38e6" \
            https://api.appcenter.ms/v0.1/apps/sghaier-fss.u-sfax.tn/flutter-app/release_uploads/$UPLOAD_ID \
            -d '{"status": "committed"}' || \
          (echo "Failed to commit APK file. Distribution aborted." && exit 1)
        else
          echo "Failed to initiate upload. Distribution aborted."
          exit 1
        fi
      else
        echo "APK file does not exist at $apkPath. Distribution aborted."
        exit 1
      fi
  rules:
    - if: '$CI_COMMIT_REF_NAME == $TARGET_BRANCH'
      when: always


